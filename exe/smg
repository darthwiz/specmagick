#!/usr/bin/env ruby
require 'specmagick'
require 'escort'
require 'specmagick/cli'
require 'pry'

Escort::App.create do |app|
  app.version Specmagick::VERSION
  app.summary "makes you live with rspec a little easier."
  app.description "(description)"

  app.options do |opts|
    opts.opt :dry_run, "dry run", long: '--dry-run', type: :flag
    opts.opt :tag, "with tags", long: '--tag', short: '-t', type: :string, multi: true
    opts.opt :rerun_failed, "rerun a run's failures", short: '-f', long: '--rerun-failed', type: :string
    opts.opt :rebuild_vcr, "rebuild VCR cassettes", long: '--rebuild-vcr', type: :flag
    opts.opt :live, "don't use VCR", long: '--live', type: :flag
  end

  app.action do |options, arguments|
    Specmagick::CLI::Run.new(options, arguments).execute
  end

  app.command :run do |command|
    command.summary "run tests and manage test runs."
    command.description nil
    command.options do |opts|
      opts.opt :dry_run, "dry run", long: '--dry-run', type: :flag
      opts.opt :tag, "with tags", long: '--tag', short: '-t', type: :string, multi: true
      opts.opt :list_latest, "list latest runs", long: '--list-latest', type: :flag
      opts.opt :list_named, "list named runs", long: '--list-named', type: :flag
      opts.opt :set_name, "assign a name to a test run", long: '--set-name', type: :string
      opts.opt :rerun_failed, "rerun a run's failures", short: '-f', long: '--rerun-failed', type: :string
      opts.opt :rebuild_vcr, "rebuild VCR cassettes", long: '--rebuild-vcr', type: :flag
      opts.opt :live, "don't use VCR", long: '--live', type: :flag
    end
    command.action do |options, arguments|
      Specmagick::CLI::Run.new(options, arguments).execute
    end
  end

  app.command :search do |command|
    command.summary "search tests by tag."
    command.description nil
    command.options do |opts|
      opts.opt :tag, "with tags", long: '--tag', short: '-t', type: :string, multi: true
      opts.opt :detailed, "detailed search", long: '--detailed', short: '-d', type: :flag
    end
    command.action do |options, arguments|
      Specmagick::CLI::Search.new(options, arguments).execute
    end
  end

  app.command :init do |command|
    command.summary "initialize the .specmagick working folder."
    command.description nil
    command.options do |opts|
      opts.opt :force, "force creation of database", long: '--force', type: :flag
      opts.opt :scan, "scan tests", long: '--scan', type: :flag
    end
    command.action do |options, arguments|
      Specmagick::CLI::Init.new(options, arguments).execute
    end
  end

  app.command :tags do |command|
    command.summary "show list of tags."
    command.description nil
    command.options do |opts|
      opts.opt :intersections, "show intersections", short: '-i', long: '--intersections', type: :flag
    end
    command.action do |options, arguments|
      Specmagick::CLI::Tags.new(options, arguments).execute
    end
  end

  app.command :vcr do |command|
    command.summary "manage VCR cassettes."
    command.description nil
    command.options do |opts|
      opts.opt :check, "check stale cassettes", long: '--check', type: :flag
    end
    command.action do |options, arguments|
      Specmagick::CLI::VCR.new(options, arguments).execute
    end
  end

  app.command :migrate do |command|
    command.summary "migrate Specmagick database to a newer version."
    command.description nil
    command.action do |options, arguments|
      Specmagick::CLI::Migrate.new(options, arguments).execute
    end
  end

  app.command :console do |command|
    command.summary "open a debug console."
    command.description nil
    command.action do |options, arguments|
      Specmagick::CLI::Console.new(options, arguments).execute
    end
  end

end
